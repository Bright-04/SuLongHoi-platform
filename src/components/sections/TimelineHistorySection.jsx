import React, { useState, useRef } from "react";
import { motion, useInView } from "framer-motion";
import "../../styles/sections/TimelineHistorySection.css";

const TimelineHistorySection = () => {
	const [activePeriod, setActivePeriod] = useState(0);
	const sectionRef = useRef(null);
	const isInView = useInView(sectionRef, { once: true, margin: "-100px" });

	// Timeline data
	const timelineData = [
		{
			id: 1,
			period: "Th·∫ø k·ª∑ 17-18",
			title: "Kh·ªüi ngu·ªìn vƒÉn h√≥a",
			description: "Ngh·ªá thu·∫≠t m√∫a l√¢n s∆∞ ƒë∆∞·ª£c du nh·∫≠p v√†o Vi·ªát Nam t·ª´ Trung Qu·ªëc, ch·ªß y·∫øu th√¥ng qua c√°c c·ªông ƒë·ªìng ng∆∞·ªùi Hoa ƒë·ªãnh c∆∞ t·∫°i c√°c th√†nh ph·ªë l·ªõn.",
			events: ["Du nh·∫≠p t·ª´ Trung Qu·ªëc", "Ph√°t tri·ªÉn trong c·ªông ƒë·ªìng ng∆∞·ªùi Hoa", "H√¨nh th√†nh c√°c ƒë·ªôi l√¢n ƒë·∫ßu ti√™n"],
			image: "/src/assets/images/illustrations/collage1.png",
			icon: "üèõÔ∏è",
			location: "C√°c th√†nh ph·ªë l·ªõn",
		},
		{
			id: 2,
			period: "Th·∫ø k·ª∑ 19",
			title: "Ph√°t tri·ªÉn truy·ªÅn th·ªëng",
			description: "Ngh·ªá thu·∫≠t m√∫a l√¢n s∆∞ b·∫Øt ƒë·∫ßu ƒë∆∞·ª£c Vi·ªát h√≥a v√† ph√°t tri·ªÉn th√†nh m·ªôt ph·∫ßn kh√¥ng th·ªÉ thi·∫øu c·ªßa vƒÉn h√≥a d√¢n gian Vi·ªát Nam.",
			events: ["Vi·ªát h√≥a ngh·ªá thu·∫≠t m√∫a l√¢n", "Ph√°t tri·ªÉn c√°c k·ªπ thu·∫≠t ri√™ng", "Tr·ªü th√†nh vƒÉn h√≥a d√¢n gian"],
			image: "/src/assets/images/illustrations/mockup(1).jpg",
			icon: "üé≠",
			location: "To√†n qu·ªëc",
		},
		{
			id: 3,
			period: "1950-1975",
			title: "Th·ªùi k·ª≥ kh√≥ khƒÉn",
			description: "Trong th·ªùi k·ª≥ chi·∫øn tranh, ngh·ªá thu·∫≠t m√∫a l√¢n s∆∞ g·∫∑p nhi·ªÅu kh√≥ khƒÉn nh∆∞ng v·∫´n ƒë∆∞·ª£c duy tr√¨ b·ªüi c√°c ngh·ªá nh√¢n t√¢m huy·∫øt.",
			events: ["Chi·∫øn tranh ·∫£nh h∆∞·ªüng", "Ngh·ªá nh√¢n duy tr√¨ truy·ªÅn th·ªëng", "Ho·∫°t ƒë·ªông h·∫°n ch·∫ø"],
			image: "/src/assets/images/illustrations/mockup(10).JPG",
			icon: "‚öîÔ∏è",
			location: "C√°c v√πng mi·ªÅn",
		},
		{
			id: 4,
			period: "1975-1990",
			title: "Kh√¥i ph·ª•c v√† ph√°t tri·ªÉn",
			description: "Sau khi ƒë·∫•t n∆∞·ªõc th·ªëng nh·∫•t, ngh·ªá thu·∫≠t m√∫a l√¢n s∆∞ ƒë∆∞·ª£c kh√¥i ph·ª•c v√† ph√°t tri·ªÉn m·∫°nh m·∫Ω, tr·ªü th√†nh m·ªôt ho·∫°t ƒë·ªông vƒÉn h√≥a quan tr·ªçng.",
			events: ["Kh√¥i ph·ª•c sau chi·∫øn tranh", "Th√†nh l·∫≠p c√°c ƒë·ªôi l√¢n m·ªõi", "Ph√°t tri·ªÉn k·ªπ thu·∫≠t bi·ªÉu di·ªÖn"],
			image: "/src/assets/images/illustrations/mockup(11).JPG",
			icon: "üïäÔ∏è",
			location: "C·∫£ n∆∞·ªõc",
		},
		{
			id: 5,
			period: "1990-2010",
			title: "Hi·ªán ƒë·∫°i h√≥a",
			description: "Ngh·ªá thu·∫≠t m√∫a l√¢n s∆∞ b∆∞·ªõc v√†o th·ªùi k·ª≥ hi·ªán ƒë·∫°i h√≥a v·ªõi s·ª± k·∫øt h·ª£p gi·ªØa truy·ªÅn th·ªëng v√† hi·ªán ƒë·∫°i, t·∫°o ra nh·ªØng m√†n bi·ªÉu di·ªÖn ·∫•n t∆∞·ª£ng.",
			events: ["Hi·ªán ƒë·∫°i h√≥a k·ªπ thu·∫≠t", "K·∫øt h·ª£p √¢m nh·∫°c hi·ªán ƒë·∫°i", "Ph√°t tri·ªÉn trang ph·ª•c m·ªõi"],
			image: "/src/assets/images/illustrations/mockup(12).JPG",
			icon: "üöÄ",
			location: "Th√†nh ph·ªë l·ªõn",
		},
		{
			id: 6,
			period: "2010-Hi·ªán t·∫°i",
			title: "Th·ªùi k·ª≥ ho√†ng kim",
			description: "Ngh·ªá thu·∫≠t m√∫a l√¢n s∆∞ ƒë·∫°t ƒë·∫øn ƒë·ªânh cao v·ªõi s·ª± ph√°t tri·ªÉn m·∫°nh m·∫Ω, nhi·ªÅu ƒë·ªôi l√¢n chuy√™n nghi·ªáp v√† c√°c cu·ªôc thi qu·ªëc t·∫ø.",
			events: ["Ph√°t tri·ªÉn chuy√™n nghi·ªáp", "Tham gia thi ƒë·∫•u qu·ªëc t·∫ø", "B·∫£o t·ªìn v√† ph√°t huy vƒÉn h√≥a"],
			image: "/src/assets/images/illustrations/mockup(13).JPG",
			icon: "üëë",
			location: "Qu·ªëc t·∫ø",
		},
	];

	const currentPeriod = timelineData[activePeriod];

	const nextPeriod = () => {
		setActivePeriod((prev) => (prev + 1) % timelineData.length);
	};

	const prevPeriod = () => {
		setActivePeriod((prev) => (prev - 1 + timelineData.length) % timelineData.length);
	};

	return (
		<section ref={sectionRef} className="timeline-history-section">
			<div className="container">
				{/* Section Header */}
				<motion.div className="section-header" initial={{ opacity: 0, y: 50 }} animate={isInView ? { opacity: 1, y: 0 } : {}} transition={{ duration: 0.8 }}>
					<h2 className="section-title">
						<span className="title-text">L·ªãch S·ª≠ Ph√°t Tri·ªÉn</span>
					</h2>
					<p className="section-subtitle">H√†nh tr√¨nh ph√°t tri·ªÉn c·ªßa ngh·ªá thu·∫≠t m√∫a l√¢n s∆∞ t·∫°i Vi·ªát Nam</p>
					<div className="section-description">
						<p>Kh√°m ph√° l·ªãch s·ª≠ h√†ng trƒÉm nƒÉm c·ªßa ngh·ªá thu·∫≠t m√∫a l√¢n s∆∞, t·ª´ nh·ªØng ng√†y ƒë·∫ßu du nh·∫≠p ƒë·∫øn s·ª± ph√°t tri·ªÉn r·ª±c r·ª° nh∆∞ ng√†y nay.</p>
					</div>
				</motion.div>

				{/* Timeline Navigation */}
				<motion.div className="timeline-navigation" initial={{ opacity: 0, y: 30 }} animate={isInView ? { opacity: 1, y: 0 } : {}} transition={{ duration: 0.8, delay: 0.2 }}>
					<div className="timeline-dots">
						{timelineData.map((period, index) => (
							<button key={period.id} className={`timeline-dot ${index === activePeriod ? "active" : ""}`} onClick={() => setActivePeriod(index)}>
								<span className="dot-icon">{period.icon}</span>
								<span className="dot-period">{period.period}</span>
							</button>
						))}
					</div>
					<div className="timeline-arrows">
						<button className="timeline-arrow prev" onClick={prevPeriod}>
							<span>‚Äπ</span>
						</button>
						<button className="timeline-arrow next" onClick={nextPeriod}>
							<span>‚Ä∫</span>
						</button>
					</div>
				</motion.div>

				{/* Timeline Content */}
				<motion.div className="timeline-content" key={activePeriod} initial={{ opacity: 0, x: 50 }} animate={{ opacity: 1, x: 0 }} transition={{ duration: 0.6 }}>
					<div className="timeline-grid">
						{/* Timeline Media */}
						<div className="timeline-media">
							<div className="media-container">
								<div className="timeline-image">
									<img
										src={currentPeriod.image}
										alt={currentPeriod.title}
										onError={(e) => {
											e.target.src = "/src/assets/images/illustrations/collage2.png";
										}}
									/>
									<div className="image-overlay">
										<div className="period-badge">
											<span className="period-icon">{currentPeriod.icon}</span>
											<span className="period-text">{currentPeriod.period}</span>
										</div>
									</div>
								</div>
								<div className="media-info">
									<div className="location-info">
										<span className="location-icon">üìç</span>
										<span className="location-text">{currentPeriod.location}</span>
									</div>
								</div>
							</div>
						</div>

						{/* Timeline Details */}
						<div className="timeline-details">
							<div className="period-header">
								<h3 className="period-title">{currentPeriod.title}</h3>
								<div className="period-meta">
									<span className="period-year">{currentPeriod.period}</span>
									<span className="period-icon-large">{currentPeriod.icon}</span>
								</div>
							</div>

							<div className="period-description">
								<p>{currentPeriod.description}</p>
							</div>

							{/* Key Events */}
							<div className="key-events">
								<h4 className="events-title">üìÖ S·ª± ki·ªán ch√≠nh</h4>
								<div className="events-list">
									{currentPeriod.events.map((event, index) => (
										<div key={index} className="event-item">
											<span className="event-icon">‚Ä¢</span>
											<span className="event-text">{event}</span>
										</div>
									))}
								</div>
							</div>

							{/* Historical Impact */}
							<div className="historical-impact">
								<h4 className="impact-title">üéØ T√°c ƒë·ªông l·ªãch s·ª≠</h4>
								<div className="impact-content">
									<p>Th·ªùi k·ª≥ n√†y ƒë√£ ƒë·∫∑t n·ªÅn m√≥ng cho s·ª± ph√°t tri·ªÉn c·ªßa ngh·ªá thu·∫≠t m√∫a l√¢n s∆∞ hi·ªán ƒë·∫°i v√† g√≥p ph·∫ßn b·∫£o t·ªìn vƒÉn h√≥a truy·ªÅn th·ªëng Vi·ªát Nam.</p>
								</div>
							</div>

							{/* Call to Action */}
							<div className="timeline-cta">
								<button className="cta-button primary">
									<span>üìö</span>
									T√¨m hi·ªÉu th√™m
								</button>
								<button className="cta-button secondary">
									<span>üé¨</span>
									Xem video l·ªãch s·ª≠
								</button>
							</div>
						</div>
					</div>
				</motion.div>

				{/* Timeline Progress */}
				<motion.div className="timeline-progress" initial={{ opacity: 0 }} animate={isInView ? { opacity: 1 } : {}} transition={{ duration: 0.8, delay: 0.4 }}>
					<div className="progress-bar">
						<div className="progress-fill" style={{ width: `${((activePeriod + 1) / timelineData.length) * 100}%` }} />
					</div>
					<span className="progress-text">
						{activePeriod + 1} / {timelineData.length}
					</span>
				</motion.div>
			</div>
		</section>
	);
};

export default TimelineHistorySection;
